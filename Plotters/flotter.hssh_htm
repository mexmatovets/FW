<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--
FD583F3CB33E4226B56558AF1F59C7C3.root_rel=/../
//-->

<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>Flotter</title>
	<link rel="stylesheet" type="text/css" href="../scripts/easyui.css">	
    <link rel="stylesheet" type="text/css" href="../scripts/icon.css">
    <script language="javascript" type="text/javascript" src='../scripts/jquery-1.7.1.min.js'></script>
    <script language="javascript" type="text/javascript" src="../scripts/jquery.easyui.min.js"></script>
    <script language="javascript" type="text/javascript" src="../scripts/$require.js"></script>
	<script language="javascript" type="text/javascript" src="../scripts/jsutils.js"></script>
	<script language="javascript" type="text/javascript" src="../scripts/jquery.blockUI.js"></script>
	<script language="javascript" type="text/javascript" src="../scripts/jquery.min.js"></script>			
    <script language="javascript" type="text/javascript" src="../flot/jquery.flot.js"></script>
	<script language="javascript" type="text/javascript" src="../flot/jquery.flot.crosshair.js"></script>
	<script language="javascript" type="text/javascript" src="../flot/jquery.flot.selection.js"></script>
    <style type="text/css">
        html, body {
            height: 100%; /* make the percentage height on placeholder work */
        }
        .message {
            padding-left: 50px;
            font-size: smaller;
        }
    </style>
</head>
<body>

<div class="easyui-layout" style="width:100%;height:100%;">  
    <div region="west" split="true" title="" style="width:150px;">  
		<p id="choices">Show:</p>
    </div>  
    <div id="content" region="center" title="" style="padding:5px;">  
		<div id="placeholder" style="width:95%;height:95%;"></div>	
		<div id="miniature" style="float:left;margin-left:20px">
			<div id="overview" style="width:166px;height:100px"></div>
			<p id="overviewLegend" style="margin-left:10px"></p>
		</div>		
    </div>  
</div>

<script type="text/javascript">
var sin = [], cos = [];
for (var i = 0; i < 14; i += 0.1) {
    sin.push([i, Math.sin(i)]);
    cos.push([i, Math.cos(i)]);
}	
var datasets = {
    "sin": {
        label: "sin(x)",
        data: sin
	},
	"cos": {
		label: "cos(x)",
		data:cos
	}
}
function plot(fdata,fopts)
{ 
	datasets=fdata;
	var tic=new Date();
       var args=jsutils.to_array(arguments);
	for (var i = 0; i < args[0].length; i++ ){args[0][i].label=args[0][i].label+" = -0.00000"}
	var plot_obj = $.plot( $("#placeholder"), args[0],args[1] );
	$("#placeholder").bind("plothover", function (evt, pos, item) {
		latestPosition = pos;
		if (!updateLegendTimeout)
			updateLegendTimeout = setTimeout(updateLegend, 50);
	});
	
	var time = new Date() - tic;
	var updateLegendTimeout = null;
	var latestPosition = null;
	//$(pl).draggable().resizable();
	
	var i = 0;
    $.each(datasets, function(key, val) {
        val.color = i;
        ++i;
    });	
		   // insert checkboxes 
    var choiceContainer = $("#choices");
    $.each(fdata, function(key, val) {
        choiceContainer.append('<br/><input type="checkbox" name="' + key +
                               '" checked="checked" id="id' + key + '">' +
                               '<label for="id' + key + '">'
                                + val.label.split('=')[0] + '</label>');
    });
	choiceContainer.find("input").click(plotAccordingToChoices);
	
	function updateLegend() {
		var pl="#placeholder";
		var legends = $(pl+" .legendLabel");
		legends.each(function () {
			// fix the widths so they don't jump around
			$(this).css('width', $(this).width());
		});
		updateLegendTimeout = null;
		
		var pos = latestPosition;
		
		var axes = plot_obj.getAxes();
		if (pos.x < axes.xaxis.min || pos.x > axes.xaxis.max ||
			pos.y < axes.yaxis.min || pos.y > axes.yaxis.max)
			return;
			
		var dataset=[];// = plot_obj.getData();	
		choiceContainer.find("input:checked").each(function () {
			var key = $(this).attr("name");
			if (key && datasets[key])
				dataset.push(datasets[key]);
		});		
		for (var i = 0; i < dataset.length; ++i) {
			var series = dataset[i];
	
			// find the nearest points, x-wise
			for (var j = 0; j < series.data.length; ++j)
				if (series.data[j][0] > pos.x)
					break;
			
			// now interpolate
			var y, p1 = series.data[j - 1], p2 = series.data[j];
			if (p1 == null)
				y = p2[1];
			else if (p2 == null)
				y = p1[1];
			else
				y = p1[1] + (p2[1] - p1[1]) * (pos.x - p1[0]) / (p2[0] - p1[0]);
	
			legends.eq(i).text(series.label.replace(/=.*/, "= " + y.toFixed(2)));
		}
	}		
	function plotAccordingToChoices() {
        var data = [];

        choiceContainer.find("input:checked").each(function () {
            var key = $(this).attr("name");
            if (key && datasets[key])
                data.push(datasets[key]);
        });

        //if (data.length > 0)
            $.plot($("#placeholder"), data, {series:{lines:{ show: true }},crosshair: { mode: "x" },grid: { hoverable: true, autoHighlight: false }});
		$("#placeholder").bind("plothover", function (evt, pos, item) {
			latestPosition = pos;
			if (!updateLegendTimeout)
				updateLegendTimeout = setTimeout(updateLegend, 50);
		});						
    }
    return  time; //msec		
}
</script>

<script type="text/javascript">    

function init() {
    var d1 = [];for (var i = 0; i < Math.PI * 2; i += 0.25)d1.push([i, Math.sin(i)]);   
    var d2 = [];for (var i = 0; i < Math.PI * 2; i += 0.25)d2.push([i, Math.cos(i)]);
	var d3 = [];for (var i = 0; i < Math.PI * 2; i += 0.1 )d3.push([i, Math.tan(i)]);

    plot(datasets,	{
                            series: {
                                lines: { show: true }
                            },
                            crosshair: { mode: "x" },
                            grid: { hoverable: true, autoHighlight: false }//,
                            //yaxis: { min: -1.2, max: 1.2 }
                        }
	
	);
};	
//window.onload=init;
</script>
<script id="source">
$(function () {
    // setup plot
    function getData(x1, x2) {
        var d = [];
        for (var i = 0; i <= 100; ++i) {
            var x = x1 + i * (x2 - x1) / 100;
            d.push([x, Math.sin(x * Math.sin(x))]);
        }

        return [
            { label: "sin(x sin(x))", data: d }
        ];
    }

    var options = {
        legend: { show: false },
        series: {
            lines: { show: true },
            points: { show: true }
        },
        yaxis: { ticks: 10 },
        selection: { mode: "xy" }
    };

    var startData = getData(0, 3 * Math.PI);
    
    var plot = $.plot($("#placeholder"), startData, options);

    // setup overview
    var overview = $.plot($("#overview"), startData, {
        legend: { show: true, container: $("#overviewLegend") },
        series: {
            lines: { show: true, lineWidth: 1 },
            shadowSize: 0
        },
        xaxis: { ticks: 4 },
        yaxis: { ticks: 3, min: -2, max: 2 },
        grid: { color: "#999" },
        selection: { mode: "xy" }
    });

    // now connect the two
    
    $("#placeholder").bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent eternal zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001)
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001)
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        
        // do the zooming
        plot = $.plot($("#placeholder"), getData(ranges.xaxis.from, ranges.xaxis.to),
                      $.extend(true, {}, options, {
                          xaxis: { min: ranges.xaxis.from, max: ranges.xaxis.to },
                          yaxis: { min: ranges.yaxis.from, max: ranges.yaxis.to }
                      }));
        
        // don't fire event on the overview to prevent eternal loop
        overview.setSelection(ranges, true);
    });
    $("#overview").bind("plotselected", function (event, ranges) {
        plot.setSelection(ranges);
    });
});

</script>
</body>
</html>